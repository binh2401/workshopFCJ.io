[
{
	"uri": "//localhost:1313/vi/",
	"title": "Xây dựng hệ thống bán sách trực tuyến triển khai trên AWS",
	"tags": [],
	"description": "",
	"content": "Xây dựng hệ thống bán sách trực tuyến triển khai trên AWS Tổng quan Trong bài lab này, bạn sẽ tìm hiểu các khái niệm cơ bản và thực hành về Amazon System Manager - Session Management. Thực hành tạo kết nối đến máy chủ public và máy chủ private trong VPC.\nNội dung Giới thiệu Các bước chuẩn bị Tạo kết nối đến máy chủ EC2 Quản lý session logs Port Forwarding Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/",
	"title": "Chuẩn bị VPC và EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cần tạo một VPC có 2 subnet public / private. Sau đó tạo 1 EC2 Instance Linux nằm trong public subnet, 1 EC2 Instance Windows nằm trong private subnet.\nTổng quan kiến trúc sau khi các bạn hoàn tất bước này sẽ như sau:\nĐể tìm hiểu cách tạo các EC2 instance và VPC với public/private subnet các bạn có thể tham khảo bài lab :\nGiới thiệu về Amazon EC2 Làm việc với Amazon VPC Nội dung Tạo VPC Tạo Public subnet Tạo Private subnet Tạo security group Tạo máy chủ Linux public Tạo máy chủ Windows private "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.1-createvpc/",
	"title": "Tạo VPC và chỉnh cấu hình",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Truy cập giao diện quản trị dịch vụ VPC Click Your VPC. Click Create VPC. Tại trang Create VPC. Tại mục Name tag điền Lab VPC. Tại mục IPv4 CIDR điền : 10.10.0.0/16. Click Create VPC. ℹ️ Thông tin Mặc định, subnet không mặc định có thuộc tính Auto-assign public IPv4 là false. Subnet mặc định có thuộc tính này là true. Subnet không mặc định được tạo qua EC2 Launch Wizard sẽ mặc định là true. 🛠️ Các bước thay đổi cấu hình 1. Truy cập Amazon VPC Console 🔗 Mở Amazon VPC Console\n2. Chọn subnet cần cấu hình Vào bảng điều hướng trái → Subnets. Chọn subnet bạn muốn cấu hình. 3. Chỉnh sửa subnet Nhấn Actions → Edit subnet settings. Bật hoặc tắt tùy chọn Enable auto-assign public IPv4 address theo nhu cầu. Nhấn Save để lưu thay đổi. ⚠️ Lưu ý: Thay đổi này chỉ áp dụng cho các EC2 instance mới được tạo trong subnet sau khi cấu hình. Những instance đang chạy sẽ không bị ảnh hưởng.\n✅ Gợi ý Hãy đảm bảo subnet của bạn nằm trong VPC có Internet Gateway nếu muốn truy cập internet công khai. Kiểm tra lại security group và route table để đảm bảo kết nối. "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Xây dựng hệ thống bán sách trực tuyến triển khai trên AWS",
	"tags": [],
	"description": "",
	"content": "Trong bối cảnh chuyển đổi số đang diễn ra mạnh mẽ, hành vi tiêu dùng của người dùng cũng thay đổi theo hướng ưu tiên mua sắm trực tuyến để tiết kiệm thời gian và tối ưu trải nghiệm. Việc xây dựng một hệ thống bán sách trực tuyến không chỉ đáp ứng nhu cầu tìm kiếm và mua sách nhanh chóng, tiện lợi mà còn góp phần mở rộng thị trường cho các nhà phát hành.\nDự án \u0026ldquo;Xây dựng Website Bán Sách Trực Tuyến\u0026rdquo; được triển khai với mục tiêu tạo ra một nền tảng thương mại điện tử chuyên biệt về sách, cung cấp các chức năng từ duyệt sách, tìm kiếm, đặt hàng đến quản trị sản phẩm và người dùng.\nĐặc biệt, dự án ứng dụng các công nghệ hiện đại như:\nASP.NET MVC làm nền tảng phát triển backend \u0026amp; frontend,\nAmazon Web Services (AWS) để triển khai hệ thống trên hạ tầng đám mây,\nAI - Trí tuệ nhân tạo để gợi ý sách phù hợp theo hành vi người dùng thông qua mô hình Graph Neural Networks (GNN) và dịch vụ Amazon Neptune ML.\nKhông chỉ dừng lại ở mức một ứng dụng web cơ bản, hệ thống còn hướng đến khả năng mở rộng linh hoạt, tính bảo mật cao, và hiệu suất xử lý tốt khi vận hành trên nền tảng đám mây. Đây là tiền đề để triển khai trong môi trường thực tế hoặc thương mại hoá trong tương lai.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các Bước Chuẩn Bị",
	"tags": [],
	"description": "",
	"content": "\rBạn cần chuẩn bị trước một số tài nguyên AWS và công nghệ lập trình để đảm bảo quá trình phát triển và triển khai hệ thống diễn ra suôn sẻ.\n💻 Công nghệ sử dụng Công nghệ / Dịch vụ Vai trò AWS EC2 Máy chủ triển khai ứng dụng web AWS RDS Dịch vụ cơ sở dữ liệu (SQL Server) trên cloud AWS S3 Lưu trữ hình ảnh bìa sách, tài liệu đính kèm AWS SNS Gửi thông báo email khi đơn hàng thay đổi trạng thái AWS IAM Quản lý phân quyền truy cập tài nguyên AWS AWS CloudWatch Ghi log hệ thống, theo dõi tình trạng server và hiệu suất AWS WAF Bảo vệ website khỏi các mối đe dọa từ bên ngoài Graph Neural Networks + Neptune ML Gợi ý sách dựa trên mạng lưới tương tác người dùng – sách, đánh giá, tác giả, thể loại 🔧 Các tài nguyên AWS cần chuẩn bị Trước khi bắt đầu tích hợp các chức năng, bạn cần chuẩn bị:\n1 EC2 instance (Linux hoặc Windows) thuộc public subnet để triển khai ứng dụng web. 1 RDS instance (SQL Server) để lưu dữ liệu sản phẩm, người dùng, đơn hàng. 1 IAM Role có quyền truy cập SNS, S3, CloudWatch và các dịch vụ khác. 1 SNS Topic đã đăng ký email nhận thông báo. 1 bucket S3 để lưu trữ ảnh bìa sách. Cấu hình AWS WAF để bảo vệ website khỏi các tấn công như SQLi, XSS, DDoS. Cấu hình AWS CloudWatch để theo dõi log hệ thống. Tài khoản Neptune ML để huấn luyện mô hình AI gợi ý sách (sử dụng GNN). 🔗 Tài liệu tham khảo Giới thiệu về Amazon EC2 Làm việc với Amazon VPC "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.2-createpublicsubnet/",
	"title": "Tạo Public subnet",
	"tags": [],
	"description": "",
	"content": "ℹ️ DB Subnet Group là gì? DB Subnet Group là tập hợp các subnet trong VPC được chỉ định cho cơ sở dữ liệu Amazon RDS. Việc tạo DB Subnet Group giúp RDS có thể triển khai các instance cơ sở dữ liệu trong nhiều Availability Zone (AZ) nhằm đảm bảo:\nTính sẵn sàng cao Khả năng chịu lỗi 🛠️ Các bước tạo DB Subnet Group Bước 1: Truy cập Amazon RDS Đăng nhập vào AWS Management Console. Trong menu dịch vụ, tìm và chọn Amazon RDS. Bước 2: Mở giao diện Subnet Groups Trong thanh điều hướng bên trái → chọn Subnet groups\nNhấn nút Create DB Subnet Group Bước 3: Nhập thông tin cơ bản Name: Tên mô tả cho DB Subnet Group Description: Mô tả chi tiết VPC: Chọn VPC nơi bạn sẽ triển khai RDS Ví dụ: Name: book-store-subnet-group Description: book-store-subnet-group VPC: vpc-0a1b2c3d Sau khi xong nhấn Nhấn create: "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.3-createprivatesubnet/",
	"title": "Tạo EC2 Security Group",
	"tags": [],
	"description": "",
	"content": "ℹ️ Security Group là gì? Security Group hoạt động như một tường lửa ảo, giúp kiểm soát lưu lượng truy cập vào và ra khỏi các tài nguyên AWS như EC2.\nMỗi Security Group chứa tập hợp các quy tắc inbound (vào) và outbound (ra). Áp dụng cho từng instance EC2 hoặc dịch vụ liên quan. 🛠️ Các bước tạo Security Group cho EC2 Bước 1: Truy cập AWS EC2 Console Đăng nhập vào AWS Management Console. Trong menu dịch vụ, chọn EC2 trong mục Compute. Bước 2: Mở mục Security Groups Trong thanh điều hướng bên trái, dưới Network \u0026amp; Security → chọn Security Groups. Nhấn nút Create Security Group. Bước 3: Nhập thông tin cơ bản Security group name: Tên mô tả cho Security Group. Description: Mô tả chức năng của Security Group. VPC: Chọn VPC bạn muốn áp dụng. Ví dụ: Name: web-server-sg Description: Security group cho máy chủ web ứng dụng VPC: vpc-0a1b2c3d 📥 Bước 4: Cấu hình Inbound Rules Thêm các quy tắc để cho phép lưu lượng truy cập đến EC2 instance:\nLoại lưu lượng Cổng Mô tả HTTP 80 Truy cập web không bảo mật HTTPS 443 Truy cập web bảo mật Custom TCP 5000 Cho phép ứng dụng chạy trên cổng 5000 SSH 22 Kết nối SSH để quản trị máy chủ 🔒 Security Note:\nTrong môi trường sản xuất, chỉ nên cho phép SSH từ các IP đáng tin cậy, ví dụ: 203.0.113.0/24\nTránh sử dụng 0.0.0.0/0 trừ khi bạn đang trong môi trường thử nghiệm hoặc đã kiểm soát bằng các lớp bảo mật khác.\n📤 Bước 5: (Tuỳ chọn) Cấu hình Outbound Rules Mặc định: Cho phép tất cả lưu lượng đi ra. Bạn có thể giới hạn outbound nếu cần kiểm soát chặt hơn trong môi trường đặc biệt. bước 6: Sau khi hoàn tất cấu hình, nhấp vào nút Create security group. 💡 Pro Tip:\nBạn có thể chỉnh sửa quy tắc Security Group bất kỳ lúc nào và các thay đổi sẽ được áp dụng ngay lập tức cho tất cả các tài nguyên được liên kết với Security Group đó.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/",
	"title": "Tạo kết nối đến máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Hướng Dẫn Tạo Amazon EC2 Instance\nℹ️ Thông tin: Amazon Elastic Compute Cloud (EC2) cung cấp khả năng tính toán có thể điều chỉnh quy mô trong đám mây AWS. Sử dụng EC2 cho phép bạn triển khai các máy chủ ảo mà không cần đầu tư vào phần cứng vật lý, giúp bạn phát triển và triển khai ứng dụng nhanh hơn.\n📌 Các bước tạo EC2 Instance 1. Truy cập AWS Management Console Mở trình duyệt và truy cập vào Amazon EC2 console tại:\n👉 https://console.aws.amazon.com/ec2/ 2. Khởi tạo EC2 Instance Tại màn hình Dashboard của EC2 console, trong hộp Launch instance, chọn Launch instance. 1. Launch an Instance 🔖 Name and tags Tên instance: book-store-server 2. Application and OS Images (Amazon Machine Image) 🔹 Chế độ: Quick Start Hệ điều hành: Amazon Linux Phiên bản: Amazon Linux 2023 AMI Chi tiết: Tên đầy đủ: Amazon Linux 2023 AMI 2023.2.20240219.0 x86_64 HVM kernel-6.1 Image ID: ami-0c55b159cbfafe1f0 Architecture: x86_64 Loại virtualization: HVM Root device type: EBS Platform: Linux Free tier eligible ✅ 3. Instance Type Loại instance: t2.micro 1 vCPU, 1 GiB RAM Free tier eligible ✅ 4. Key Pair (Login) Key pair đã chọn: book-store Nếu chưa có thì ấn vào create key 5. Network Settings VPC: vpc-xxx (back-store-cloud-vpc) Subnet: subnet-xxx (back-store-cloud-public-sub-eastasia-b) Auto-assign public IP: Enabled Firewall (security group rules): Chế độ: Select existing security group Security group: book-store-cloud-sg (ID: sg-034e625ff1fbdd04c) Cổng mở: SSH (TCP port 22) HTTP (TCP port 80) HTTPS (TCP port 443) 6. Configure Storage Ổ đĩa mặc định: Dung lượng: 10 GiB Loại ổ: gp2 (General Purpose SSD) Free tier eligible ✅ Encrypted: ❌ (Not encrypted) 7. Summary (Tóm tắt) Name: book-store-server AMI: Amazon Linux 2023 Instance type: t2.micro Key pair: book-store Security group: book-store-cloud-sg Storage: 10 GiB gp2 Free tier eligible: ✅ ✅ Sau khi hoàn tất: Nhấn nút Launch instance. Chờ trạng thái instance chuyển từ pending sang running. Kết nối SSH với instance bằng IP công khai hoặc DNS thông qua MobaXterm hoặc terminal. Kết nối vào EC2 Instance bằng SSH sử dụng MobaXterm ℹ️ Thông tin:\nMobaXterm là một ứng dụng đa năng cho Windows cung cấp nhiều công cụ mạng trong một giao diện duy nhất, bao gồm:\nSSH client SFTP X11 server Và nhiều tính năng khác 🧰 Bước 1: Tải và cài đặt MobaXterm Tải MobaXterm từ trang chính thức: 👉 MobaXterm Website Cài đặt ứng dụng theo hướng dẫn. 🔌 Bước 2: Tạo phiên SSH mới Khởi động MobaXterm. Nhấp vào biểu tượng Session ở góc trên bên trái. ⚙️ Bước 3: Cấu hình kết nối SSH Trong cửa sổ cấu hình:\nRemote Host: Nhập địa chỉ IP công khai hoặc DNS công khai của EC2 instance. Port: 22 (cổng SSH mặc định) User: ec2-user (cho Amazon Linux) ➕ Advanced SSH settings: Chọn tab này để chỉ định đường dẫn đến tệp khóa riêng tư (.pem) mà bạn dùng để kết nối SSH. 🔒 Ghi chú bảo mật:\nĐảm bảo file .pem có quyền hạn chế (chỉ user hiện tại có thể đọc). Trên Linux/Mac, dùng lệnh: chmod 400 file.pem 🖥️ Bước 4: Kết nối vào EC2 Instance Nhấn OK để lưu và bắt đầu phiên SSH. Nếu đây là lần đầu kết nối: Sẽ hiện cảnh báo về host key không xác định. Chọn Yes để tiếp tục. ✅ Xác nhận kết nối thành công Sau khi kết nối, bạn sẽ thấy terminal của EC2 instance. Bạn có thể bắt đầu chạy các lệnh như: sudo yum update, top, htop,\u0026hellip; 💡 Mẹo nhỏ:\nMobaXterm tự động lưu các phiên gần đây. Giúp bạn dễ dàng kết nối lại mà không cần cấu hình lại từ đầu. 🎉 Hoàn tất! Bạn đã kết nối SSH vào EC2 instance thành công.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-createiamrole/",
	"title": "Tạo SNS và IAM cho gửi Email",
	"tags": [],
	"description": "",
	"content": "📬 Mục tiêu Trong bước này, chúng ta sẽ thực hiện:\nTạo một SNS Topic để gửi email khi đơn hàng đặt thành công. Tạo IAM Policy cho phép ứng dụng gửi thông báo thông qua SNS. Gán quyền đó cho EC2 Instance hoặc dịch vụ backend. 🛠️ Tạo SNS Topic Truy cập vào dịch vụ Amazon SNS. Chọn Topics từ thanh menu bên trái, sau đó click Create topic.\nChọn loại topic là Standard.\nNhập tên cho topic, ví dụ: book-email. Giữ nguyên các cài đặt mặc định và click Create topic.\n📥 Đăng ký email nhận thông báo (Subscription) Sau khi tạo topic, chọn topic vừa tạo trong danh sách. Trong tab Subscriptions, click Create subscription. Chọn:\nProtocol: Email Endpoint: nhập địa chỉ email của bạn để nhận thông báo (ví dụ: user@example.com) Click Create subscription.\n📧 Một email xác nhận sẽ được gửi tới địa chỉ bạn nhập. Bạn cần click xác nhận trong email đó để bắt đầu nhận thông báo.\n🔐 Tạo IAM User để gửi SNS Trong phần này, bạn sẽ tạo một IAM User chuyên dùng để gửi email qua Amazon SNS. User này sẽ có quyền sns:Publish vào topic bạn đã tạo.\n1. Truy cập IAM Console Truy cập vào IAM Management Console.\n2. Tạo IAM User Chọn Users → nhấn Create user 3. Nhập thông tin User Nhập tên user, ví dụ: book-store-sns Tick chọn Programmatic access → Nhấn Next\n4. Gán quyền sử dụng SNS Chọn Attach policies directly Tìm kiếm AmazonSNSFullAccess và tick chọn AmazonSNSFullAccess (hoặc gán custom policy nếu bạn đã tạo trước đó) Nhấn Next\n5. Xác nhận và tạo IAM User Nhấn Create user Tạo Access Key\nNhấn vào Create access key (ở góc phải, mục Access key)\nLàm theo các bước hướng dẫn để tạo cặp Access key ID và Secret access key\n✅ Ghi chú: Bạn chỉ có thể xem Secret access key một lần duy nhất tại thời điểm tạo. Hãy lưu lại cẩn thận để cấu hình trong ứng dụng.\n6. Sử dụng Access Key trong ứng dụng Bạn có thể sử dụng Access Key này để gửi email thông qua SNS bằng SDK phù hợp:\nVới ASP.NET MVC (AWS SDK for .NET) Hoặc Python, Node.js, Java, v.v. 7. Cấu hình AWS trong appsettings.json Thêm thông tin cấu hình SNS vào file appsettings.json như sau:\n{ \u0026#34;AWS\u0026#34;: { \u0026#34;AccessKey\u0026#34;: \u0026#34;AccessKey của bạn\u0026#34;, \u0026#34;SecretKey\u0026#34;: \u0026#34;SecretKey của bạn\u0026#34;, \u0026#34;Region\u0026#34;: \u0026#34;Region của bạn cấu hình\u0026#34;, \u0026#34;SnsTopicArn\u0026#34;: \u0026#34;SnsTopicArn của bạn\u0026#34; } } 🔐 Cảnh báo bảo mật: Không nên commit AccessKey và SecretKey lên GitHub. Thay vào đó, hãy lưu vào biến môi trường hoặc file cấu hình .env.\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/",
	"title": "Tạo RDS database và triển khai web",
	"tags": [],
	"description": "",
	"content": "1. Cài đặt Git trên Amazon EC2 (Amazon Linux 2023) Bước 1: Cập nhật hệ thống sudo dnf update -y sudo dnf search git sudo dnf install git -y git --version 2. Cài đặt asp.net trên Amazon EC2 Linux 2023 và clone file trên git Cài đặt .NET SDK \u0026amp; Runtime sudo dnf install -y dotnet-sdk-8.0 sudo dnf install -y aspnetcore-runtime-8.0 Kiểm tra: dotnet --version sau khi kiểm tra version chúng ta bắt đầu clone git git clone https://github.com/binh2401/FCJ.git Hướng dẫn tạo RDS SQL Server trên AWS Amazon RDS hỗ trợ triển khai Microsoft SQL Server dưới dạng dịch vụ được quản lý. Hướng dẫn sau giúp bạn khởi tạo một SQL Server Instance nhanh chóng và an toàn.\n🔧 Các bước thực hiện Bước 1: Mở Amazon RDS Console Truy cập: https://console.aws.amazon.com/rds/\nỞ khu vực điều hướng trái → chọn Databases Nhấn Create database\nBước 2: Chọn phương thức tạo Chọn Standard create (để tùy chỉnh được cấu hình) Engine: chọn Microsoft SQL Server Bước 3: Chọn phiên bản và edition Edition: SQL Server Web Edition SQL Server Express Edition SQL Server Standard Edition SQL Server Enterprise Edition (nếu cần các tính năng cao cấp) Version: Chọn phiên bản SQL Server (ví dụ: SQL Server 2019) Bước 4: Cấu hình thông tin đăng nhập DB instance identifier: tên định danh của DB Master username: ví dụ admin Master password: nhập mật khẩu và xác nhận 🔐 Nếu bỏ chọn “Auto generate a password” thì bạn cần nhập thủ công.\nBước 5: Chọn lớp máy chủ và dung lượng lưu trữ DB instance class: ví dụ db.t3.medium (2 vCPU, 4 GB RAM) Storage type: chọn General Purpose (SSD) hoặc Provisioned IOPS Thiết lập dung lượng: ví dụ 20 GiB Bước 6: Cấu hình mạng và bảo mật Virtual Private Cloud (VPC): chọn VPC mặc định hoặc tùy chỉnh Subnet group: nếu chưa có, RDS sẽ tạo mới Public access: chọn Yes nếu muốn truy cập từ internet VPC security group: Chọn Create new nếu chưa có RDS sẽ tạo rule mở port 1433 cho IP hiện tại Bước 7: Thiết lập nâng cao (Optional) Backup retention period: giữ bản sao lưu bao nhiêu ngày (ví dụ 7) Monitoring: bật Enhanced monitoring nếu cần Maintenance window: thời gian bảo trì tự động Deletion protection: bảo vệ khỏi xóa nhầm Bước 8: Tạo SQL Server Instance Nhấn Create database Chờ vài phút đến khi trạng thái chuyển từ Creating sang Available 🔗 Kết nối tới RDS SQL Server hoặc chỉ cần kết nối tới data dẫn tới code trong appsettings.json \u0026#34;ConnectionStrings\u0026#34;: { \u0026#34;DefaultConnection\u0026#34;: \u0026#34;của bạn,1433;Database=của bạn;User Id=admin;Password=của bạn;Encrypt=True;TrustServerCertificate=True\u0026#34; } Sau khi instance sẵn sàng:\nTruy cập tab Connectivity \u0026amp; security Ghi lại thông tin: Endpoint (ví dụ: mydb.abcxyz.rds.amazonaws.com) Port: 1433 Username: đã tạo trước đó Bạn có thể kết nối bằng công cụ như:\n-- Sử dụng SQL Server Management Studio (SSMS) Server: \u0026lt;endpoint\u0026gt;,1433 Authentication: SQL Server Authentication Username: \u0026lt;username\u0026gt; Password: \u0026lt;password\u0026gt; vào EC2 để đẻ cài đặt sqlserver Cài đặt mssql-tools và unixODBC trên Amazon Linux 2023 Hướng dẫn cài đặt công cụ dòng lệnh sqlcmd và bcp từ Microsoft SQL Server trên Amazon EC2 dùng Amazon Linux 2023 (RHEL 9-based).\nBước 1: Thêm kho Microsoft vào hệ thống sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc sudo curl -o /etc/yum.repos.d/mssql-release.repo https://packages.microsoft.com/config/rhel/9/prod.repo bước 2: Cài đặt ODBC Driver và mssql-tools sudo dnf update -y sudo dnf install -y unixODBC unixODBC-devel sudo ACCEPT_EULA=Y dnf install -y msodbcsql18 mssql-tools18 bước 3: Thêm sqlcmd và bcp vào PATH echo \u0026#39;export PATH=\u0026#34;$PATH:/opt/mssql-tools18/bin\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc bước 4: Kiểm tra cài đặt sqlcmd -? 📊 Xem Logs và Events Truy cập tab Logs \u0026amp; events Có thể xem: Error log SQL Server Agent log Event log 🛡 Xem bảo trì và sao lưu Vào tab Maintenance \u0026amp; backups Kiểm tra lịch sao lưu tự động Thực hiện snapshot thủ công Theo dõi thời gian bảo trì ❗ Lưu ý quan trọng Không thể xem lại mật khẩu nếu chọn tự tạo. Nếu quên → cần sửa lại DB instance để reset. Cần mở port 1433 trong Security Group nếu truy cập từ bên ngoài. 📚 Tài liệu tham khảo:\nAmazon RDS SQL Server Documentation Triển khai ASP.NET Core WebBanHang trên Amazon EC2 \u0026amp; RDS (Amazon Linux 2023) 1. Thiết lập hạ tầng AWS ✅ Tạo VPC riêng ✅ Tạo Subnet (Multi-AZ) ✅ Tạo Security Group EC2 ✅ Tạo Security Group RDS ✅ Tạo DB Subnet Group ✅ Tạo Amazon EC2 Instance ✅ Tạo Amazon RDS (SQL Server) 2. Kết nối vào EC2 bằng SSH Sử dụng MobaXterm hoặc dòng lệnh:\nssh -i \u0026#34;bookstore-key.pem\u0026#34; ec2-user@\u0026lt;EC2-PUBLIC-IP\u0026gt; 3. Cài đặt môi trường trên Amazon EC2 (Amazon Linux 2023) Cập nhật hệ thống: sudo dnf update -y Cài Git: sudo dnf search git sudo dnf install git -y git --version Cài .NET SDK \u0026amp; Runtime: sudo dnf install -y dotnet-sdk-8.0 sudo dnf install -y aspnetcore-runtime-8.0 dotnet --version 4. Upload Project từ máy tính cá nhân lên EC2 Trên máy tính:\nscp -i \u0026#34;C:\\Users\\PC\\Downloads\\bookstore-key.pem\u0026#34; -r FCJ ec2-user@\u0026lt;EC2-PUBLIC-IP\u0026gt;:/home/ec2-user/ 5. Publish ASP.NET Project cd /home/ec2-user/FCJ/WebBanHang dotnet publish -c Release -o out ls out 6. Cấu hình Systemd Service Tạo file dịch vụ: sudo nano /etc/systemd/system/webbanhang.service Nội dung: [Unit] Description=ASP.NET Core WebBanHang After=network.target [Service] WorkingDirectory=/home/ec2-user/FCJ/WebBanHang/out ExecStart=/usr/bin/dotnet /home/ec2-user/FCJ/WebBanHang/out/WebBanHang.dll Restart=always RestartSec=10 SyslogIdentifier=webbanhang User=ec2-user Environment=ASPNETCORE_ENVIRONMENT=Production Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false [Install] WantedBy=multi-user.target Khởi động dịch vụ: sudo systemctl daemon-reload sudo systemctl enable webbanhang sudo systemctl start webbanhang sudo systemctl status webbanhang 7. Cài NGINX làm reverse proxy sudo dnf install nginx -y sudo systemctl enable nginx sudo systemctl start nginx Cấu hình NGINX: sudo nano /etc/nginx/conf.d/webbanhang.conf server { listen 80; server_name _; location / { proxy_pass http://localhost:5000; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } sudo systemctl restart nginx 8. Cài sqlcmd \u0026amp; kết nối RDS Cài công cụ: sudo dnf install -y https://packages.microsoft.com/config/rhel/9/prod.repo sudo dnf install -y mssql-tools unixODBC echo \u0026#39;export PATH=\u0026#34;$PATH:/opt/mssql-tools/bin\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc Kết nối RDS: sqlcmd -S \u0026lt;RDS-ENDPOINT\u0026gt; -U admin -P your_password 9. Apply Migration với EF Core Cài EF Tools: export PATH=\u0026#34;$PATH:$HOME/.dotnet/tools\u0026#34; dotnet tool install --global dotnet-ef Apply database: cd /home/ec2-user/FCJ/WebBanHang dotnet ef database update --project WebBanHang.csproj 10. Cập nhật appsettings.json cd /home/ec2-user/FCJ/WebBanHang/out sudo nano appsettings.json Nội dung ví dụ: { \u0026#34;ConnectionStrings\u0026#34;: { \u0026#34;DefaultConnection\u0026#34;: \u0026#34;Server=book-store.cjyi2kukw3oj.ap-southeast-1.rds.amazonaws.com,1433;Database=store;User Id=admin;Password=Abc@123456;Encrypt=True;TrustServerCertificate=True\u0026#34; } } Lưu lại: Ctrl + O → Enter Ctrl + X 11. Restart \u0026amp; Xem log dịch vụ sudo systemctl restart webbanhang journalctl -u webbanhang -n 50 --no-pager 🎉 DONE! Mở trình duyệt:\n👉 http://\u0026lt;EC2-PUBLIC-IP\u0026gt;/\n✅ Nếu không truy cập được, kiểm tra Security Group đã mở port 80 chưa nhé.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.4-createsecgroup/",
	"title": "Tạo Security Group cho Amazon RDS",
	"tags": [],
	"description": "",
	"content": "Tạo Security Group cho Amazon RDS ℹ️ Information:\nSecurity Group cho Amazon RDS hoạt động như tường lửa ảo để kiểm soát lưu lượng mạng đến và đi từ cơ sở dữ liệu của bạn. Việc cấu hình đúng Security Group là bước quan trọng để bảo vệ dữ liệu của bạn trong AWS.\n🛠️ Các bước tạo Security Group cho RDS 1. Đăng nhập vào AWS Management Console. 2. Truy cập dịch vụ VPC Vào menu dịch vụ.\nChọn VPC trong phần Networking \u0026amp; Content Delivery. 3. Mở danh sách Security Groups Trên thanh điều hướng bên trái, dưới mục Security, chọn Security Groups. 4. Nhấp vào nút Create security group để bắt đầu quá trình tạo. 📝 Cấu hình Basic Details Security group name: Nhập tên mô tả cho Security Group. Description: Thêm mô tả chi tiết về mục đích của Security Group. VPC: Chọn VPC nơi bạn sẽ triển khai cơ sở dữ liệu RDS. 🔐 Cấu hình Inbound Rules Chọn MSSQL từ danh sách Type. Port 1433 sẽ được tự động điền. Source: Chọn Anywhere-IPv4* 🔒 Security Note:\nChỉ cho phép kết nối từ các nguồn cụ thể thay vì mở cổng cơ sở dữ liệu cho tất cả địa chỉ IP (0.0.0.0/0). Điều này tuân theo nguyên tắc đặc quyền tối thiểu và tăng cường bảo mật.\n📤 (Tùy chọn) Cấu hình Outbound Rules Mặc định, tất cả lưu lượng đi ra đều được cho phép. Bạn có thể giới hạn nếu cần bảo mật cao hơn. ✅ Tạo Security Group Sau khi hoàn tất cấu hình, nhấn nút Create security group. Security Group mới đã được tạo và sẵn sàng để gán cho DB instance RDS của bạn. ⚠️ Warning:\nKhông nên sử dụng cùng một Security Group cho cả EC2 và RDS.\nViệc tách biệt Security Group giúp quản lý quyền truy cập chính xác hơn và tuân thủ các nguyên tắc bảo mật tốt nhất.\n💡 Pro Tip Bạn có thể chỉnh sửa quy tắc Security Group bất kỳ lúc nào, và các thay đổi sẽ được áp dụng ngay lập tức cho tất cả tài nguyên liên kết với Security Group đó.\n"
},
{
	"uri": "//localhost:1313/vi/5-portfwd/",
	"title": "Tổng Quan và Cấu Hình AWS WAF ,cloudfront&#34;",
	"tags": [],
	"description": "",
	"content": "🔐 I. Tổng quan AWS WAF AWS WAF (Web Application Firewall) là dịch vụ tường lửa ứng dụng web giúp bảo vệ website hoặc API khỏi các mối đe dọa phổ biến như:\nSQL Injection Cross-Site Scripting (XSS) Tấn công DDoS (khi kết hợp với AWS Shield) Các request bất thường (dựa trên IP, quốc gia, header,\u0026hellip;) 🛠️ II. Các bước cấu hình AWS WAF 1. Tạo Application Load Balancer (ALB) Vào EC2 Console → Load Balancers → Create Load Balancer Chọn loại: Application Load Balancer Cấu hình: Đặt tên ALB Chọn schema: Internet-facing (nếu website public) Chọn VPC, Subnet Cấu hình security group mở port 80/443 Tạo Target Group Trong quá trình tạo ALB, chọn Create a new target group Loại target: Instance Chọn protocol: HTTP hoặc HTTPS Thêm các EC2 instances đang chạy website vào target group 3. Gắn AWS WAF vào ALB Truy cập AWS WAF \u0026amp; Shield Chọn Web ACLs → Create Web ACL Tại bước Association, chọn ALB bạn vừa tạo 1. Tạo Web ACL (Access Control List) Truy cập AWS Console → Tìm WAF \u0026amp; Shield Chọn Web ACLs → Create web ACL Đặt tên, chọn Region nếu sử dụng ALB, hoặc CloudFront nếu sử dụng CDN. 2. Chọn tài nguyên cần bảo vệ Gắn Web ACL với một trong các dịch vụ: Application Load Balancer (ALB) Amazon API Gateway Amazon CloudFront (Khuyến khích nếu website phục vụ toàn cầu) 3. Thêm các Rule vào Web ACL Bạn có thể chọn:\n✅ Managed Rule Groups của AWS: 4. Cấu hình hành động cho mỗi Rule Allow: Cho phép Block: Chặn Count: Ghi nhận nhưng không chặn (giúp kiểm thử trước khi áp dụng thực tế) 5. Gắn Web ACL với Resource Sau khi tạo Web ACL, bạn gắn nó với tài nguyên cần bảo vệ:\nClient → CloudFront (gắn AWS WAF) → ALB → EC2/Laragon (.NET App) Tích hợp AWS CloudWatch vào ứng dụng ASP.NET MVC ✅ Mục tiêu Ghi log lỗi, log hệ thống từ ASP.NET MVC lên AWS CloudWatch Logs Tự động tạo Log Group/Stream nếu chưa có Không cần cài CloudWatch Agent 🧰 Yêu cầu Ứng dụng ASP.NET MVC (Core hoặc .NET Framework) Tài khoản AWS và IAM user có quyền ghi CloudWatch Logs 🔧 Bước 1: Cài đặt gói AWS Logger Mở terminal hoặc Package Manager Console và chạy:\ndotnet add package AWS.Logger.AspNetCore Nếu bạn dùng .NET Framework MVC cũ, thay vào đó dùng:\nAWS.Logger.Log4Net hoặc AWS.Logger.NLog tuỳ theo hệ thống logging bạn sử dụng.\n⚙️ Bước 2: Cấu hình appsettings.json { \u0026#34;AWS\u0026#34;: { \u0026#34;Region\u0026#34;: \u0026#34;ap-southeast-1\u0026#34;, \u0026#34;LogGroup\u0026#34;: \u0026#34;MvcAppLogGroup\u0026#34; }, \u0026#34;Logging\u0026#34;: { \u0026#34;LogLevel\u0026#34;: { \u0026#34;Default\u0026#34;: \u0026#34;Information\u0026#34;, \u0026#34;Microsoft\u0026#34;: \u0026#34;Warning\u0026#34; } } } 🧬 Bước 3: Cấu hình logger trong mã nguồn ✅ Đối với ASP.NET Core MVC (.NET 6 trở lên): Sửa file Program.cs:\nusing AWS.Logger.AspNetCore; var builder = WebApplication.CreateBuilder(args); builder.Logging.AddAWSProvider(builder.Configuration.GetAWSLoggingConfigSection()); builder.Services.AddControllersWithViews(); var app = builder.Build(); app.UseRouting(); app.UseAuthorization(); app.MapDefaultControllerRoute(); app.Run(); 🔐 Bước 4: Cấu hình quyền truy cập AWS 👉 Nếu chạy trên EC2: Gán IAM Role cho EC2 instance với quyền:\n{ \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;logs:CreateLogGroup\u0026#34;, \u0026#34;logs:CreateLogStream\u0026#34;, \u0026#34;logs:PutLogEvents\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; } 👉 Nếu chạy local (dev): Tạo file ~/.aws/credentials hoặc C:\\Users\\\u0026lt;tên user\u0026gt;\\.aws\\credentials:\n[default] aws_access_key_id = YOUR_ACCESS_KEY aws_secret_access_key = YOUR_SECRET_KEY 🧪 Bước 5: Thêm dòng ghi log trong controller private readonly ILogger\u0026lt;HomeController\u0026gt; _logger; public HomeController(ILogger\u0026lt;HomeController\u0026gt; logger) { _logger = logger; } public IActionResult Index() { _logger.LogInformation(\u0026#34;Trang chủ được truy cập lúc \u0026#34; + DateTime.Now); return View(); } 📊 Bước 6: Kiểm tra log trên AWS Truy cập AWS Console \u0026gt; CloudWatch \u0026gt; Log groups Chọn MvcAppLogGroup Chọn log stream để xem chi tiết 🧩 Ghi chú thêm Bạn có thể dùng thêm AWS X-Ray để trace hiệu năng request nếu ứng dụng phức tạp. Có thể tích hợp LogLevel, EventID, Exception để có log chi tiết hơn. Chúc bạn triển khai thành công! Nếu bạn cần bản mẫu cho .NET Framework MVC hoặc muốn cấu hình ghi log nâng cao, hãy để lại bình luận hoặc liên hệ.\n"
},
{
	"uri": "//localhost:1313/vi/6-cleanu/",
	"title": "Graph Neural Networks với Neptune ML(chưa xong)",
	"tags": [],
	"description": "",
	"content": "🎯 Mục tiêu Hướng dẫn xuất dữ liệu từ SQL Server sang file CSV và upload thủ công lên Amazon S3 để sử dụng trong Amazon Neptune.\n🧱 Bước 1: Cài đặt thư viện cần thiết Cài đặt bằng pip: pip install pandas pyodbc boto3 🧩 Bước 2: Kết nối SQL Server và xuất dữ liệu ra thư mục ./export 📁 Cấu trúc thư mục: project/\r│\r├── export/ # Chứa các file CSV sau khi export\r├── data.py # Script Python để export 🔢 Code data.py: import os import pandas as pd from sqlalchemy import create_engine # Chuỗi kết nối server = \u0026#39;(localdb)\\\\MSSQLLocalDB\u0026#39; database = \u0026#39;boookstore\u0026#39; conn_str = f\u0026#39;mssql+pyodbc://@{server}/{database}?driver=ODBC+Driver+17+for+SQL+Server\u0026#39; # Tạo engine kết nối engine = create_engine(conn_str) # Danh sách bảng cần export tables = [\u0026#39;dbo.Categories\u0026#39;, \u0026#39;dbo.Products\u0026#39;, \u0026#39;dbo.Orders\u0026#39;] # Thư mục lưu file CSV output_folder = \u0026#39;./export\u0026#39; os.makedirs(output_folder, exist_ok=True) # Xuất dữ liệu từng bảng for table in tables: print(f\u0026#34;📌 Đang xử lý bảng: {table}\u0026#34;) df = pd.read_sql(f\u0026#34;SELECT * FROM {table}\u0026#34;, engine) table_name = table.split(\u0026#39;.\u0026#39;)[-1] df.to_csv(f\u0026#39;{output_folder}/{table_name}.csv\u0026#39;, index=False) print(f\u0026#34;✅ Đã lưu: {table_name}.csv\u0026#34;) ☁️ Bước 3: Upload thủ công lên Amazon S3 Vào AWS S3 Console Tạo một bucket (nếu chưa có) Vào bucket đó → \u0026ldquo;Upload\u0026rdquo; → Chọn các file .csv trong thư mục ./export Sau khi upload, copy đường dẫn S3 URI của các file (ví dụ: s3://your-bucket-name/Categories.csv) "
},
{
	"uri": "//localhost:1313/vi/7-clean/",
	"title": "Dọn dẹp",
	"tags": [],
	"description": "",
	"content": "🧨 Lưu ý trước khi xóa Luôn kiểm tra kỹ xem tài nguyên có đang được sử dụng không. Sao lưu dữ liệu quan trọng (nếu cần) trước khi thực hiện xóa. 🧹 1. Xóa VPC thủ công Bước 1: Truy cập VPC Dashboard Mở: https://console.aws.amazon.com/vpc Vào mục Your VPCs Bước 2: Xóa các tài nguyên bên trong VPC: Subnets Route tables Internet gateways NAT gateways Security groups (tùy chỉnh) Bước 3: Xóa VPC Chọn VPC → Bấm Actions → Delete VPC ⚠️ Không thể xóa VPC nếu còn tài nguyên bên trong nó.\n💾 2. Xóa RDS Instance thủ công Bước 1: Truy cập RDS Dashboard Mở: https://console.aws.amazon.com/rds Bước 2: Vào mục Databases Click vào DB cần xóa → Actions \u0026gt; Delete Bước 3: Chọn có muốn giữ snapshot hay không Tick chọn Skip final snapshot nếu không cần lưu 🔐 3. Xóa Security Group Vào: EC2 Dashboard → Security Groups Chọn nhóm cần xóa → Bấm Actions \u0026gt; Delete Nhóm chỉ xóa được nếu không gán cho EC2 hay resource nào.\n📊 4. Xóa Log Group trong CloudWatch Vào: https://console.aws.amazon.com/cloudwatch Chọn Log groups → tick vào log group → Actions \u0026gt; Delete log group 🔥 5. Xóa WAF Web ACL Vào: https://console.aws.amazon.com/wafv2 Chọn Web ACL cần xóa Bấm Delete Nếu được gắn với ALB hay CloudFront thì phải tháo liên kết trước.\n📁 6. Xóa Bucket S3 Vào: https://s3.console.aws.amazon.com/s3 Click vào bucket → Empty để xóa toàn bộ file Sau đó Delete bucket ✅ Tổng kết Hãy xác nhận kỹ trước khi xóa. Ưu tiên sử dụng tagging để dễ tìm tài nguyên không dùng. Nên thiết lập cảnh báo (billing alerts) để tránh tốn chi phí do tài nguyên \u0026ldquo;quên xóa\u0026rdquo;. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]